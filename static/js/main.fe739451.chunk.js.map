{"version":3,"sources":["index.js"],"names":["Square","props","react__WEBPACK_IMPORTED_MODULE_6___default","a","createElement","className","onClick","value","Board","i","_this","this","squares","renderSquare","React","Component","Game","_this2","Object","E_React_r_a_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","E_React_r_a_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_3__","E_React_r_a_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_4__","call","state","history","Array","fill","xIsNext","stepNumber","slice","length","calculateWinner","setState","concat","step","status","_this3","current","winner","moves","map","move","desc","key","jumpTo","handleClick","lines","_lines$i","E_React_r_a_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe739451.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\n/*\r\nclass Square extends React.Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                className=\"square\"\r\n                onClick={() => this.props.onClick()}\r\n            >\r\n                {this.props.value}\r\n            </button>\r\n    );\r\n    }\r\n}\r\n*/\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        /*const winner = calculateWinner(this.state.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = `Winner: ${winner}`;\r\n        } else {\r\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n        }*/\r\n\r\n        return (\r\n            <div>\r\n                {/*<div className=\"status\">{status}</div>*/}\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [\r\n                { squares: Array(9).fill(null),}\r\n            ],\r\n            xIsNext: true,\r\n            stepNumber: 0,\r\n        }\r\n\r\n      /*// 为了在回调中使用 `this`，这个绑定是必不可少的\r\n        this.handleClick = this.handleClick.bind(this);*/\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);  // 点击的时候获取history的副本，不能直接变更history，会导致无法历史回溯\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([\r\n                { squares: squares, }\r\n            ]),\r\n            xIsNext: !this.state.xIsNext,\r\n            stepNumber: history.length,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;  // 必须是全局从头到尾的所有记录，用于生成不同的历史，如果修改，会导致<ol>记录变更\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? `Go to move #${move}` : `Go to game start`;\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = `Winner: ${winner}`;\r\n        } else {\r\n            status = `Next player: ${this.state.xIsNext ? 'X' : 'O'}`;\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <h1>Hello small Game!</h1>\r\n                <div className=\"game-board\">\r\n                    <Board\r\n                        squares={current.squares}\r\n                        onClick={(i) => this.handleClick(i)}  // React中触发函数，为了在回调中使用 `this`，最好使用绑定bind，如果使用箭头函数，可能会造成额外的重新渲染\r\n                    />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n    <Game />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}